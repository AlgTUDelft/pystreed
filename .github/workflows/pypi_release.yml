name: Publish distributions to PyPI

on:
  workflow_dispatch:
  push:
    tags:
     - '*'
     
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build SDist0
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-source
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - uses: actions/checkout@v4

    - uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_ARCHS_MACOS: auto universal2
        CIBW_PRERELEASE_PYTHONS: true

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheel-${{ matrix.os }}
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    #if: github.event_name == 'release'

    steps:
    - uses: actions/setup-python@v5
      name: Set up Python 3.x
      with:
        python-version: "3.8"

    - uses: actions/download-artifact@v4
      name: Download wheels
      with:
        pattern: dist-*
        merge-multiple: true
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      name: Publish to PyPI
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    
